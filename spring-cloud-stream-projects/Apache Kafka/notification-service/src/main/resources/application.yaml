server:
  port: 9998

spring:
  application:
    name: notification-service
  output:
    ansi:
      enabled: ALWAYS

  cloud:
    stream:
      kafka:
        binder:
          broker: localhost:9092
      bindings:
        orderEventReceiver-in-0:
          destination: order.created
          contentType: application/json
          group: ${spring.application.name}
        orderEventReceiver-out-0:
          destination: order.ack
          contentType: application/json
          group: ${spring.application.name}
    function:
      definition: orderEventReceiver

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/


#spring.cloud.stream.kafka.binder.broker: localhost:9092
#spring.cloud.function.definition: orderEventReceiver
#
#spring.cloud.stream.bindings.orderEventReceiver-in-0.destination: order.created
#spring.cloud.stream.bindings.orderEventReceiver-in-0.contentType: application/json
#spring.cloud.stream.bindings.orderEventReceiver-in-0.group: ${spring.application.name}
#
#spring.cloud.stream.bindings.orderEventReceiver-out-0.destination: order.ack
#spring.cloud.stream.bindings.orderEventReceiver-out-0.contentType: application/json
#spring.cloud.stream.bindings.orderEventReceiver-out-0.group: ${spring.application.name}
