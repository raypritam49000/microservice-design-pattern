server:
  port: 9997

spring:
  application:
    name: order-service
  output:
    ansi:
      enabled: ALWAYS
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  cloud:
    stream:
      bindings:
        orderCreatedEvent-out-0:
          destination: order.created
          contentType: application/json
          group: ${spring.application.name}
        consumeAck-in-0:
          destination: order.ack
          contentType: application/json
          group: ${spring.application.name}
    function:
      definition: consumeAck

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

#spring.cloud.stream.kafka.binder.broker: localhost:9092
#
#spring.cloud.stream.bindings.orderCreatedEvent-out-0.destination: order.created
#spring.cloud.stream.bindings.orderCreatedEvent-out-0.contentType: application/json
#spring.cloud.stream.bindings.orderCreatedEvent-out-0.group: ${spring.application.name}
#
#spring.cloud.function.definition: consumeAck
#spring.cloud.stream.bindings.consumeAck-in-0.destination: order.ack
#spring.cloud.stream.bindings.consumeAck-in-0.contentType: application/json
#spring.cloud.stream.bindings.consumeAck-in-0.group: ${spring.application.name}



